import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { IAMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IAMClient";
import { UploadSigningCertificateRequest, UploadSigningCertificateResponse } from "../models/models_1";
export interface UploadSigningCertificateCommandInput extends UploadSigningCertificateRequest {
}
export interface UploadSigningCertificateCommandOutput extends UploadSigningCertificateResponse, __MetadataBearer {
}

export declare class UploadSigningCertificateCommand extends $Command<UploadSigningCertificateCommandInput, UploadSigningCertificateCommandOutput, IAMClientResolvedConfig> {
    readonly input: UploadSigningCertificateCommandInput;
    constructor(input: UploadSigningCertificateCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IAMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UploadSigningCertificateCommandInput, UploadSigningCertificateCommandOutput>;
    private serialize;
    private deserialize;
}
